{"version":3,"sources":["components/TopAppBar.js","components/PlaceCard.js","components/BottomNav.js","services/DataFetcher.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","search","Object","defineProperty","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","breakpoints","up","spacing","unit","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","debounceTimer","react_default","a","createElement","className","AppBar_default","Toolbar_default","Typography_default","variant","Search_default","InputBase_default","placeholder","input","onChange","e","clearTimeout","value","target","setTimeout","card","cardMedia","CardContent","contact","icon","_ref","name","address","rating","img","Card_default","raised","CardMedia_default","component","image","concat","CardContent_default","lib_default","max","readOnly","iconFilled","Star_default","iconNormal","StarBorder_default","align","street","city","state","Phone_default","Link_default","href","phone","Email_default","email","toLowerCase","rel","ExitToApp_default","site","alignContent","currentValue","maxValue","BottomNavigation_default","BottomNavigationAction_default","label","KeyboardArrowLeft_default","KeyboardArrowRight_default","DataFetcher","asyncToGenerator","regenerator_default","mark","_callee","itemsNumber","wrap","_context","prev","next","Promise","resolve","Math","random","abrupt","data","slice","stop","_x","apply","this","arguments","App","console","error","t0","setState","react","CssBaseline_default","components_TopAppBar","log","placeList","length","map","item","key","id","placeItem","components_PlaceCard","assign","floor","CircularProgress_default","components_BottomNav","event","Component","flexDirection","minHeight","margin","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0e0ae1e.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport InputBase from \"@material-ui/core/InputBase\"\nimport { fade } from \"@material-ui/core/styles/colorManipulator\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport SearchIcon from \"@material-ui/icons/Search\"\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -5,\n    marginRight: 20\n  },\n  title: {\n    marginRight: \"1rem\"\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n})\n\nconst TopAppBar = props => {\n  const { classes } = props\n  let debounceTimer = null\n  return (\n    <div className={classes.root}>\n      <AppBar position='sticky'>\n        <Toolbar>\n          {/* <IconButton\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='Open drawer'\n          >\n            <MenuIcon />\n          </IconButton> */}\n          <Typography className={classes.title} variant='h6' color='inherit'>\n            Melp\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder='Search…'\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              onChange={e => {\n                clearTimeout(debounceTimer)\n                const value = e.target.value\n                debounceTimer = setTimeout(() => props.onChange(value), 1000)\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nTopAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(TopAppBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport { withStyles } from '@material-ui/core/styles'\nimport PhoneIcon from '@material-ui/icons/Phone'\nimport EmailIcon from '@material-ui/icons/Email'\nimport ExitToApp from '@material-ui/icons/ExitToApp'\nimport StarIcon from '@material-ui/icons/Star'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport Rating from 'material-ui-rating'\n\nconst styles = theme => ({\n  card: {\n    width: '500px',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  cardMedia: {\n    width: '200px',\n    height: '200px',\n    borderRadius: theme.shape.borderRadius,\n    marginLeft: theme.spacing.unit,\n  },\n  CardContent:{\n    flexGrow:1,\n  },\n  contact: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: theme.spacing.unit,\n  },\n})\n\nconst PlaceCard = ({ name, contact, address, rating, img, classes }) => (\n  <Card raised className={classes.card}>\n    <CardMedia\n      className={classes.cardMedia}\n      component='img'\n      image={img}\n      title={`${name}`}\n    />\n    <CardContent className={classes.CardContent}>\n      <Typography variant='h5'>{name}</Typography>\n      <Rating\n        value={rating}\n        max={4}\n        readOnly={true}\n        iconFilled={<StarIcon />}\n        iconNormal={<StarBorderIcon />}\n      />\n      <div className={classes.address}>\n        <Typography variant='body1' align='right'>\n          {address.street}\n        </Typography>\n        <Typography variant='body1' align='right'>\n          {address.city}\n        </Typography>\n        <Typography variant='body1' align='right'>\n          {address.state}\n        </Typography>\n      </div>\n      <div className={classes.contact}>\n        <PhoneIcon className={classes.icon} />\n        <Link href={`tel:${contact.phone}`} variant='body1' color='textPrimary'>\n          {contact.phone}\n        </Link>\n      </div>\n      <div className={classes.contact}>\n        <EmailIcon className={classes.icon} />\n        <Link\n          href={`mailto:${contact.email.toLowerCase()}`}\n          target='_blank'\n          rel='noreferrer'\n          variant='body1'\n          color='textPrimary'\n        >\n          {contact.email.toLowerCase()}\n        </Link>\n      </div>\n      <div className={classes.contact}>\n        <ExitToApp className={classes.icon} />\n        <Link\n          href={contact.site.toLowerCase()}\n          target='_blank'\n          rel='noreferrer'\n          variant='body1'\n          color='textPrimary'\n        >\n          {contact.site}\n        </Link>\n      </div>\n    </CardContent>\n  </Card>\n)\n\nPlaceCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  contact: PropTypes.object.isRequired,\n  address: PropTypes.object.isRequired,\n  rating: PropTypes.number.isRequired,\n  img: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PlaceCard)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    alignContent: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n})\n\nconst BottomNav = ({ currentValue, maxValue, onChange, classes }) => (\n  <BottomNavigation onChange={onChange} className={classes.root}>\n    <BottomNavigationAction\n      label='Previous'\n      value='Previous'\n      icon={<KeyboardArrowLeft />}\n    />\n    <Typography variant='body1' align='right'>\n      {`${currentValue} - ${maxValue}`}\n    </Typography>\n    <BottomNavigationAction\n      label='Next'\n      value='Next'\n      icon={<KeyboardArrowRight />}\n    />\n  </BottomNavigation>\n)\n\nBottomNav.propTypes = {\n  currentValue: PropTypes.number.isRequired,\n  maxValue: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(BottomNav)\n","import data from './data_melp.json'\n\nexport default async itemsNumber => {\n  await new Promise(resolve => setTimeout(resolve, Math.random() * 1000))\n  return data.slice(0, itemsNumber)\n}\n","import React, { Component, Fragment } from 'react'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TopAppBar from './components/TopAppBar'\nimport PlaceCard from './components/PlaceCard'\nimport BottomNav from './components/BottomNav'\nimport { withStyles } from '@material-ui/core/styles'\nimport DataFetcher from './services/DataFetcher'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    minHeight: '100vh',\n  },\n  placeList: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignContent: 'center',\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n  },\n  placeItem: {\n    margin: theme.spacing.unit,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n})\n\nclass App extends Component {\n  state = {\n    data: [],\n  }\n\n  async componentDidMount() {\n    let data = []\n    try {\n      data = await DataFetcher(10)\n    } catch (error) {\n      console.error(error)\n    }\n    this.setState({ data: data })\n  }\n  render() {\n    const { classes } = this.props\n    const { data } = this.state\n    return (\n      <Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n          <TopAppBar onChange={console.log} />\n          <div className={classes.placeList}>\n            {data && data.length > 0 ? (\n              data.map(item => (\n                <div key={item.id} className={classes.placeItem}>\n                  <PlaceCard\n                    {...item}\n                    img={`http://lorempixel.com/200/200/food/${Math.floor(\n                      Math.random() * data.length,\n                    ) + 1}`}\n                  />\n                </div>\n              ))\n            ) : (\n              <CircularProgress className={classes.placeItem} />\n            )}\n          </div>\n          <BottomNav\n            currentValue={1}\n            maxValue={5}\n            onChange={(event, value) => console.log(value)}\n          />\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}