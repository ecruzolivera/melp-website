{"version":3,"sources":["components/TopAppBar.js","components/PlaceCard.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","search","Object","defineProperty","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","breakpoints","up","spacing","unit","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","&:focus","props","classes","debounceTimer","react_default","a","createElement","className","AppBar_default","Toolbar_default","Typography_default","variant","Search_default","InputBase_default","placeholder","input","onChange","e","clearTimeout","value","target","setTimeout","card","maxWidth","cardMedia","contact","icon","_ref","name","address","rating","img","Card_default","raised","CardMedia_default","component","image","concat","CardContent_default","lib_default","max","readOnly","iconFilled","Star_default","iconNormal","StarBorder_default","align","street","city","state","Phone_default","phone","Email_default","Link_default","href","email","toLowerCase","rel","ExitToApp_default","site","data","id","location","lat","lng","App","react","CssBaseline_default","components_TopAppBar","console","log","Grid_default","container","alignContent","justify","key","item","components_PlaceCard","assign","CircularProgress_default","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sSAiHeA,uBAvGA,SAAAC,GAAK,MAAK,CACvBC,KAAM,CACJC,MAAO,QAETC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAa,EACbC,YAAa,IAEfC,MAAO,CACLD,YAAa,QAEfE,OAAOC,OAAAC,EAAA,EAAAD,CAAA,CACLE,SAAU,WACVC,aAAcb,EAAMc,MAAMD,aAC1BE,gBAAiBC,eAAKhB,EAAMiB,QAAQC,OAAOC,MAAO,KAClDC,UAAW,CACTL,gBAAiBC,eAAKhB,EAAMiB,QAAQC,OAAOC,MAAO,MAEpDb,WAAY,EACZJ,MAAO,QACNF,EAAMqB,YAAYC,GAAG,MAAQ,CAC5BhB,WAAYN,EAAMuB,QAAQC,KAC1BtB,MAAO,SAGXuB,WAAY,CACVvB,MAA4B,EAArBF,EAAMuB,QAAQC,KACrBE,OAAQ,OACRd,SAAU,WACVe,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACTC,MAAO,UACP9B,MAAO,QAET+B,WAAWvB,OAAAC,EAAA,EAAAD,CAAA,CACTwB,WAAYlC,EAAMuB,QAAQC,KAC1BW,aAAcnC,EAAMuB,QAAQC,KAC5BY,cAAepC,EAAMuB,QAAQC,KAC7Ba,YAAkC,GAArBrC,EAAMuB,QAAQC,KAC3Bc,WAAYtC,EAAMuC,YAAYC,OAAO,SACrCtC,MAAO,QACNF,EAAMqB,YAAYC,GAAG,MAAQ,CAC5BpB,MAAO,IACPuC,UAAW,CACTvC,MAAO,SAoDAH,CA9CG,SAAA2C,GAAS,IACjBC,EAAYD,EAAZC,QACJC,EAAgB,KACpB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQ1C,MACtB4C,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQlC,SAAS,UACfiC,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KAQED,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYE,UAAWL,EAAQnC,MAAO4C,QAAQ,KAAKpB,MAAM,WAAzD,QAGAa,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQxC,OACxB0C,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQlC,QACtBoC,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQlB,YACtBoB,EAAAC,EAAAC,cAACM,EAAAP,EAAD,OAEFD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACES,YAAY,eACZZ,QAAS,CACP1C,KAAM0C,EAAQZ,UACdyB,MAAOb,EAAQV,YAEjBwB,SAAU,SAAAC,GACRC,aAAaf,GACb,IAAMgB,EAAQF,EAAEG,OAAOD,MACvBhB,EAAgBkB,WAAW,kBAAMpB,EAAMe,SAASG,IAAQ,wLCKzD7D,uBAxFA,SAAAC,GAAK,MAAK,CACvB+D,KAAM,CACJC,SAAU,QACVpC,QAAS,OACTC,WAAY,UAEdoC,UAAW,CACT/D,MAAO,QACPwB,OAAQ,QACRb,aAAc,MACdP,WAAYN,EAAMuB,QAAQC,MAE5B0C,QAAS,CACPtC,QAAS,OACTC,WAAY,UAEdsC,KAAM,CACJ5D,YAAaP,EAAMuB,QAAQC,QAuEhBzB,CAnEG,SAAAqE,GAAA,IAAGC,EAAHD,EAAGC,KAAMH,EAATE,EAASF,QAASI,EAAlBF,EAAkBE,QAASC,EAA3BH,EAA2BG,OAAQC,EAAnCJ,EAAmCI,IAAK7B,EAAxCyB,EAAwCzB,QAAxC,OAChBE,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAM4B,QAAM,EAAC1B,UAAWL,EAAQoB,MAC9BlB,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CACEE,UAAWL,EAAQsB,UACnBW,UAAU,MACVC,MAAOL,EACPhE,MAAK,GAAAsE,OAAKT,KAEZxB,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,KACED,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYM,QAAQ,MAAMiB,GAC1BxB,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACEc,MAAOW,EACPU,IAAK,EACLC,UAAU,EACVC,WAAYtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,MACZuC,WAAYxC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,QAEdD,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYM,QAAQ,QAAQmC,MAAM,SAC/BjB,EAAQkB,QAEX3C,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYM,QAAQ,QAAQmC,MAAM,SAC/BjB,EAAQmB,MAEX5C,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYM,QAAQ,QAAQmC,MAAM,SAC/BjB,EAAQoB,OAEX7C,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQuB,SACtBrB,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAWE,UAAWL,EAAQwB,OAC9BtB,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAYM,QAAQ,SAASc,EAAQ0B,QAEvC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQuB,SACtBrB,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAWE,UAAWL,EAAQwB,OAC9BtB,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEiD,KAAI,UAAAjB,OAAYZ,EAAQ8B,MAAMC,eAC9BpC,OAAO,SACPqC,IAAI,aACJ9C,QAAQ,QACRpB,MAAM,eAELkC,EAAQ8B,MAAMC,gBAGnBpD,EAAAC,EAAAC,cAAA,OAAKC,UAAWL,EAAQuB,SACtBrB,EAAAC,EAAAC,cAACoD,EAAArD,EAAD,CAAWE,UAAWL,EAAQwB,OAC9BtB,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEiD,KAAM7B,EAAQkC,KAAKH,cACnBpC,OAAO,SACPqC,IAAI,aACJ9C,QAAQ,QACRpB,MAAM,eAELkC,EAAQkC,WC7EbC,EAAO,CACX,CACEC,GAAI,uCACJ/B,OAAQ,EACRF,KAAM,2BACNH,QAAS,CACPkC,KAAM,uBACNJ,MAAO,2BACPJ,MAAO,eAETtB,QAAS,CACPkB,OAAQ,wBACRC,KAAM,wBACNC,MAAO,UACPa,SAAU,CAAEC,IAAK,mBAAoBC,KAAM,sBA4BlCC,MAvBf,WACE,OACE7D,EAAAC,EAAAC,cAAC4D,EAAA,SAAD,KACE9D,EAAAC,EAAAC,cAAC6D,EAAA9D,EAAD,MACAD,EAAAC,EAAAC,cAAC8D,EAAD,CAAWpD,SAAUqD,QAAQC,MAC7BlE,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CACEmE,WAAS,EACTC,aAAa,SACbC,QAAQ,SACRtF,WAAW,UAEVwE,EACCxD,EAAAC,EAAAC,cAACiE,EAAAlE,EAAD,CAAMsE,IAAKf,EAAK,GAAGC,GAAIe,MAAI,GACzBxE,EAAAC,EAAAC,cAACuE,EAAD5G,OAAA6G,OAAA,GAAelB,EAAK,GAApB,CAAwB7B,IAAI,0CAG9B3B,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,SCjCU2E,QACW,cAA7BC,OAAOnB,SAASoB,UAEe,UAA7BD,OAAOnB,SAASoB,UAEhBD,OAAOnB,SAASoB,SAASC,MACvB,2DCbNC,IAASC,OAAOjF,EAAAC,EAAAC,cAACgF,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.48b0977c.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport InputBase from \"@material-ui/core/InputBase\"\nimport { fade } from \"@material-ui/core/styles/colorManipulator\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport SearchIcon from \"@material-ui/icons/Search\"\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -5,\n    marginRight: 20\n  },\n  title: {\n    marginRight: \"1rem\"\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n})\n\nconst TopAppBar = props => {\n  const { classes } = props\n  let debounceTimer = null\n  return (\n    <div className={classes.root}>\n      <AppBar position='sticky'>\n        <Toolbar>\n          {/* <IconButton\n            className={classes.menuButton}\n            color='inherit'\n            aria-label='Open drawer'\n          >\n            <MenuIcon />\n          </IconButton> */}\n          <Typography className={classes.title} variant='h6' color='inherit'>\n            Melp\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder='Searchâ€¦'\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              onChange={e => {\n                clearTimeout(debounceTimer)\n                const value = e.target.value\n                debounceTimer = setTimeout(() => props.onChange(value), 1000)\n              }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}\n\nTopAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nexport default withStyles(styles)(TopAppBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\nimport { withStyles } from '@material-ui/core/styles'\nimport PhoneIcon from '@material-ui/icons/Phone'\nimport EmailIcon from '@material-ui/icons/Email'\nimport ExitToApp from '@material-ui/icons/ExitToApp'\nimport StarIcon from '@material-ui/icons/Star'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport Rating from 'material-ui-rating'\n\nconst styles = theme => ({\n  card: {\n    maxWidth: '600px',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  cardMedia: {\n    width: '200px',\n    height: '200px',\n    borderRadius: '4px',\n    marginLeft: theme.spacing.unit,\n  },\n  contact: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: theme.spacing.unit,\n  },\n})\n\nconst PlaceCard = ({ name, contact, address, rating, img, classes }) => (\n  <Card raised className={classes.card}>\n    <CardMedia\n      className={classes.cardMedia}\n      component='img'\n      image={img}\n      title={`${name}`}\n    />\n    <CardContent>\n      <Typography variant='h5'>{name}</Typography>\n      <Rating\n        value={rating}\n        max={4}\n        readOnly={true}\n        iconFilled={<StarIcon />}\n        iconNormal={<StarBorderIcon />}\n      />\n      <Typography variant='body1' align='right'>\n        {address.street}\n      </Typography>\n      <Typography variant='body1' align='right'>\n        {address.city}\n      </Typography>\n      <Typography variant='body1' align='right'>\n        {address.state}\n      </Typography>\n      <div className={classes.contact}>\n        <PhoneIcon className={classes.icon} />\n        <Typography variant='body1'>{contact.phone}</Typography>\n      </div>\n      <div className={classes.contact}>\n        <EmailIcon className={classes.icon} />\n        <Link\n          href={`mailto:${contact.email.toLowerCase()}`}\n          target='_blank'\n          rel='noreferrer'\n          variant='body1'\n          color='textPrimary'\n        >\n          {contact.email.toLowerCase()}\n        </Link>\n      </div>\n      <div className={classes.contact}>\n        <ExitToApp className={classes.icon} />\n        <Link\n          href={contact.site.toLowerCase()}\n          target='_blank'\n          rel='noreferrer'\n          variant='body1'\n          color='textPrimary'\n        >\n          {contact.site}\n        </Link>\n      </div>\n    </CardContent>\n  </Card>\n)\n\nPlaceCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  contact: PropTypes.object.isRequired,\n  address: PropTypes.object.isRequired,\n  rating: PropTypes.number.isRequired,\n  img: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n}\n\nexport default withStyles(styles)(PlaceCard)\n","import React, { Component, Fragment } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\n\nimport TopAppBar from \"./components/TopAppBar\"\nimport PlaceCard from \"./components/PlaceCard\"\n\nimport { withStyles } from \"@material-ui/core/styles\"\n\nconst data = [\n  {\n    id: \"851f799f-0852-439e-b9b2-df92c43e7672\",\n    rating: 1,\n    name: \"Barajas, Bahena and Kano\",\n    contact: {\n      site: \"https://federico.com\",\n      email: \"Anita_Mata71@hotmail.com\",\n      phone: \"534 814 204\"\n    },\n    address: {\n      street: \"82247 Mariano Entrada\",\n      city: \"MÃ©rida Alfredotown\",\n      state: \"Durango\",\n      location: { lat: 19.440057053713137, lng: -99.12704709742486 }\n    }\n  }\n]\n\nfunction App() {\n  return (\n    <Fragment>\n      <CssBaseline />\n      <TopAppBar onChange={console.log} />\n      <Grid\n        container\n        alignContent='center'\n        justify='center'\n        alignItems='center'\n      >\n        {data ? (\n          <Grid key={data[0].id} item>\n            <PlaceCard {...data[0]} img='http://lorempixel.com/200/200/food/' />\n          </Grid>\n        ) : (\n          <CircularProgress />\n        )}\n      </Grid>\n    </Fragment>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}